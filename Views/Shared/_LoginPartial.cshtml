@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <a id="manage" class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
        Hello @UserManager.GetUserName(User)!
    </a>

    var user = await UserManager.GetUserAsync(User);
    if (user.AgentExpirationDate > DateTime.MinValue)
    {
        <form id="billing" class="form-inline dropdown-item" asp-controller="Agent" asp-action="Billing">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Manage Billing</button>
        </form>
    }

    <form id="logoutForm" class="form-inline dropdown-item" asp-area="Identity" asp-page="/Account/Logout"
        asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
    </form>

}
else
{

    <a class="dropdown-item" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>

    <a class="dropdown-item" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>

}
</ul>
